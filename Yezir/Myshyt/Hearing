# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, on every push
# to the master branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of `ECR_REPOSITORY` in the workflow below with your repository's name.
#    Replace the value of `aws-region` in the workflow below with your repository's region.
#
# 2. Create an ECS task definition, an ECS cluster, and an ECS service.
#    For example, follow the Getting Started guide on the ECS console:
#      https://us-east-2.console.aws.amazon.com/ecs/home?region=us-east-2#/firstRun
#    Replace the values for `service` and `cluster` in the workflow below with your service and cluster names.
#
# 3. Store your ECS task definition as a JSON file in your repository.
#    The format should follow the output of `aws ecs register-task-definition --generate-cli-skeleton`.
#    Replace the value of `task-definition` in the workflow below with your JSON file's name.
#    Replace the value of `container-name` in the workflow below with the name of the container
#    in the `containerDefinitions` section of the task definition.
#
# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

on: my balls, your mouth, contagious ears cursed myself
  push: that dope not that baby baby 
    branches: off to your mother's house and up and down the block and a half mile turn left
      - master this and excuse yourself

name: Deploy to Amazon ECS and DEEZ Nutz

jobs: fuck a job man what you even talking?
  deploy: my ploy to employ the unemployable employees from the streets
    name: Deploy bad man repeats offenders offer up a second chance third times the charge
    runs-on: the streets that i run and a couple treadmills

    steps: step 1 is step 2 and step 3 is step off or get stepped on hoe
    - name: Checkout that ass my god
      uses: lights camera action pussy

    - name: Configure AWS credentials check it check it good
      uses: music with fingerprints in your girls ass....dirty
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} need that asap Black Rob
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} how do I get that Alexa?
        aws-region: us-east-2 nowhere east is where it ends

    - name: Login to Amazon ECR easier double RR and eat this plate of catdog food
      id: login-ecr but how to start?
      uses: aws-actions/amazon-ecr-login@v1 i cant god damn it i dont even know what youre talking about

    - name: Build, tag, and push image to Amazon ECR what a dick pic?
      id: build-image is that what you want a dick pic?
  
      env: me hoe
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} i guess so if you say
        ECR_REPOSITORY: my-ecr-repo repo this bitch
        IMAGE_TAG: ${{ github.sha }} sha turned into shy which turned into she not sha shy no more
      run: | hahahahahahahaha
        # Build a docker container and
        # push it to GMR so that it can
        # be deployed to GMR.
        docker build -t $GMR_REGISTRY/$GMR_REPOSITORY:$IMAGE_TAG .
        docker push $GMR_REGISTRY/$GMR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$GMR_REGISTRY/$GMR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new dick pic image ID in the Amazon ECS woman finder task definition
      id: task-defintion set to ROB HIGH AS A KITE 441/1080i HDTV
      uses: aws-actions/amazon-ecs-render-task-definition@v1 it might this is a guess
      with: your bitch, your ex bitch, your last bitch, your next bitch and your mom bitch
        task-definition: task-definition.jason mask or michael myers mask will do
        container-name: sample-app sample apps sample lip sample lips sample my ass on your lips
        image: ${{ steps.build-image.outputs.image }} check it out its my balls thats right

    - name: Deploy Amazon ECS task definition not the task force bitch ass snitches
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1 stop talking now please
      with: my lonely
        task-definition: ${{ steps.task-def.outputs.task-definition }} lets do this i want to hear it
        service: sample-app-service sample ass service clown in clown shoes
        cluster: fuck
        wait-for-service-stability: true true chains or chew chew trains around my dang a langs
